<% operation = get_builder_operation(element) %>
<% case rule %>
<% when element['element'] %>
  <%= parent %>.add(new queryBuilder.Range(<%= element['category'] %>, <%= element['title'] %>, <%= element['field'] %>, <%= element['start'] %>, <%= element['end'] %>))
<% element.each do |subelement| %>
  <%  %>
<% end %>


operation = get_operation(structure)
if (operation == 'rule')
  switch rule
    when element['end'] != undefined then parent.add(new queryBuilder.Range(element['category'], element['title'], element['field'], element['start'], element['end']))
    when element['comparator'] != undefined then parent.add(new queryBuilder.Comparison(element['category'], element['title'], element['field'], element['value'], element['comparator']))
  else parent.add(new queryBuilder.Rule(element['category'], element['title'], element['field'], element['value']))
else
  childOperation = new queryBuilder[operation]
  parent.add(childOperation)
  add_to_filter(childOperation, childElement) for childElement in element[operation]
  
  
  
element.add(
  new X(
    new A()
  ),
  new Y(
    new B()
  ),
  new Z(
    new C()
  )
)