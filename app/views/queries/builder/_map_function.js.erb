<%
  # This partial defines the map function of MapReduce jobs. It handles the logic of blank UI zones, generates functions that match the passed in query_structure,
  # and emits requested information.
  #
  # Locals
  # query_structure - The JSON that represents the query for which we're writing the map function.
%>

function find(patient) {
  var root = new queryStructure.Or(null, [
  <% query_structure['find']['and'].each do |subelement|
    if subelement != query_structure['find']['and'].last
      comma_if_last = ','
    end %>
    <%= render :partial => '/queries/builder/build_where', :locals => { :element => subelement, :comma_if_last => comma_if_last } %>
  <% end %>
  ]);
  return root.test(patient);
}

function filter(patient) {
  var root = new queryStructure.Or(null, [
  <% query_structure['filter']['and'].each do |subelement|
    if subelement != query_structure['filter']['and'].last
      comma_if_last = ','
    end %>
    <%= render :partial => '/queries/builder/build_where', :locals => { :element => subelement, :comma_if_last => comma_if_last } %>
  <% end %>
  ]);
  return root.test(patient);
}

function map(patient) {  
  if (find(patient)) {
    if (filter(patient)) {
      emit('target_pop', 1);
    }
    else {
      emit('filtered_pop', 1);
      emit_patient(patient);
    }
  }
  else {
    emit('unfound_pop', 1);
  }
  emit('total_pop', 1);
}