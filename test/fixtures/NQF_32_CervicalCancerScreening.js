function map(patient) {
	
	/************************************************************************************************
	*                                                                                               *
	*                                  BEGIN AUTOMATED SECTION HERE                                 *
	*                                                                                               *
	************************************************************************************************/
	
	var encounterOutpatientCodes = {
		"CPT": [
			"99201", "99202", "99203", "99204", "99205", "99211", "99212", "99213", "99214",
			"99215", "99217", "99218", "99219", "99220", "99241", "99242", "99243", "99244",
			"99245", "99341", "99342", "99343", "99344", "99345", "99347", "99348", "99349",
			"99350", "99384", "99385", "99386", "99387", "99394", "99395", "99396", "99397",
			"99401", "99402", "99403", "99404", "99411", "99412", "99420", "99429", "99455",
			"99456"
		],
		"ICD-9-CM": [
			"V70.0", "V70.3", "V70.5", "V70.6", "V70.8", "V70.9"
		]
	};
	
	var hysterectomyCodes = {
		"CPT": [
			"51925", "56308", "58150", "58152", "58200", "58210", "58240", "58260", "58262",
			"58263", "58267", "58270", "58275", "58280", "58285", "58290", "58291", "58292",
			"58293", "58294", "58550", "58552", "58553", "58554", "58570", "58571", "58572",
			"58573", "58951", "58953", "58954", "58956", "59135"
		],
		"ICD-10-CM": [
			"N81.81", "Z12.72", "Z90.71", "Z90.710", "Z90.7112"
		],
		"ICD-9-CM": [
			"618.5", "68.4", "68.41", "68.49", "68.5", "68.51", "68.59", "68.6", "68.61",
			"68.69", "68.7", "68.71", "68.79", "68.8", "V67.01", "V76.47", "V88.01", "V88.03"
		],
		"SNOMED-CT": [
			"116140006", "116142003", "116143008", "116144002", "236886002", "236888001", "236891001", "27950001", "307771009",
			"31545000", "35955002", "361222003", "361223008", "414575003", "59750000", "79095000", "86477000", "88144003"
		]
	};
	
	var papTestCodes = {
		"CPT": [
			"88141", "88142", "88143", "88147", "88148", "88150", "88152", "88153", "88154",
			"88155", "88164", "88165", "88166", "88167", "88174", "88175"
		],
		"HCPCS": [
			"G0123", "G0124", "G0141", "G0143", "G0144", "G0145", "G0147", "G0148", "P3000",
			"P3001", "Q0091"
		],
		"ICD-10-CM": [
			"Z12.4", "Z12.72"
		],
		"ICD-9-CM": [
			"91.46", "V72.32"
		],
		"LOINC": [
			"10524-7", "18500-9", "19762-4", "19764-0", "19765-7", "19766-5", "19774-9", "33717-0", "47527-7",
			"47528-5"
		],
		"SNOMED-CT": [
			"439958008", "440615002", "440623000"
		]
	};
	
	var encounterObGynCodes = {
		"ICD-9-CM": [
			"V24", "V25", "V26", "V27", "V28", "V45.5", "V61.5", "V61.6", "V61.7",
			"V69.2", "V72.3", "V72.4"
		]
	};
	
	/************************************************************************************************
	*                                                                                               *
	*                                   END AUTOMATED SECTION HERE                                  *
	*                                                                                               *
	************************************************************************************************/

	function addDate (date, y, m, d){
		var n = new Date (date);
		n.setFullYear(date.getFullYear() + (y || 0));
		n.setMonth(date.getMonth() + (m || 0));
		n.setDate(date.getDate() + (d || 0));
		return n;
	}
	
	var start = new Date(2010,1,1);
	var end = new Date(2010,12,31);

	function population(patient) {
		return (patient.age(start) >= 23 && patient.age(start) <= 63);
	}
	
	function denominator(patient) {
		return (
				patient.encounters().match(encounterOutpatientCodes, addDate(end, -2), end).length ||
				patient.encounters().match(encounterObGynCodes, addDate(end, -2), end).length
			) &&
			!patient.procedures().match(hysterectomyCodes, null, null).length;
	}
	
	function numerator(patient) {
		return patient.results().match(papTestCodes, addDate(end, -3), end).length;
	}
	
	function exclusion(patient) {
		return false;
	}
	
	if (population(patient)) {
		emit("p", 1);
		if (denominator(patient)) {
			if (numerator(patient)) {
				emit("d", 1);
				emit("n", 1);
			} else if (exclusion(patient)) {
				emit("e", 1);
			} else {
				emit("d", 1);
			}
		}
	}
}

function reduce(criteria, counts) {
	return Array.sum(counts);
}